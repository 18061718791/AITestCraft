generator client {
  provider   = "prisma-client-js"
  output     = "../src/generated/prisma"
  engineType = "binary"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model modules {
  id          Int          @id @default(autoincrement())
  system_id   Int
  name        String       @db.VarChar(100)
  description String?      @db.Text
  sort_order  Int          @default(0)
  created_at  DateTime     @default(now())
  updated_at  DateTime
  systems     systems      @relation(fields: [system_id], references: [id], onDelete: Cascade)
  scenarios   scenarios[]
  test_cases  test_cases[]

  @@index([system_id], map: "modules_system_id_fkey")
}

model scenarios {
  id          Int          @id @default(autoincrement())
  module_id   Int
  name        String       @db.VarChar(100)
  description String?      @db.Text
  content     String?      @db.Text
  sort_order  Int          @default(0)
  created_at  DateTime     @default(now())
  updated_at  DateTime
  modules     modules      @relation(fields: [module_id], references: [id], onDelete: Cascade)
  test_cases  test_cases[]

  @@index([module_id], map: "scenarios_module_id_fkey")
}

model systems {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(100)
  description String?      @db.Text
  created_at  DateTime     @default(now())
  updated_at  DateTime
  modules     modules[]
  test_cases  test_cases[]
}

model test_cases {
  id              Int               @id @default(autoincrement())
  title           String            @db.VarChar(255)
  precondition    String?           @db.Text
  steps           String            @db.Text
  expectedResults String            @db.Text
  priority        String            @db.VarChar(10)
  source          String            @db.VarChar(10)
  systemId        Int?
  moduleId        Int?
  scenarioId      Int?
  created_at      DateTime          @default(now())
  updated_at      DateTime
  deleted_at      DateTime?
  tags            Json?
  status          test_cases_status @default(PENDING)
  modules         modules?          @relation(fields: [moduleId], references: [id])
  scenarios       scenarios?        @relation(fields: [scenarioId], references: [id])
  systems         systems?          @relation(fields: [systemId], references: [id])

  @@index([created_at])
  @@index([moduleId])
  @@index([priority])
  @@index([scenarioId])
  @@index([source])
  @@index([status])
  @@index([systemId])
}

enum test_cases_status {
  PENDING
  PASSED
  FAILED
  SKIPPED
}
